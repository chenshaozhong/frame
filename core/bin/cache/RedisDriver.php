<?phpnamespace core\bin\cache;use Redis;/** * Effect: * FileName: RedisDriver.hhp.php * Created by PhpStorm * Author: Charon <chensz@adsit.cn> * Date: 2015/11/10 * Time: 11:50 */ class RedisDriver implements CacheInterface{     protected $redis = NULL;     protected $group = '';     protected $ver = 0;     public function __construct($config = array())     {         $this->redis = new Redis();         if( empty($config) )         {             $config['REDIS'] = array('server'=>'127.0.0.1' , 'port'=>6379);             $config['GROUP'] = '';         }         $ret = $this->redis->connect($config['REDIS']['server'], $config['REDIS']['port']);         if( ! $ret)         {             return false;         }         if( isset($config['GROUP']) )         {             $this->group = $config['GROUP'];         }         $this->ver = intval( $this->redis->get($this->group.'_ver') );     }     public function get($key)     {         return $this->redis->get($this->group.'_'.$this->ver.'_'.$key);     }     /**      * 设置缓存      * @param string  $key    缓存名      * @param mixed   $value  缓存内容      * @param integer $expire 缓存时间      */     public function set($key, $value, $expire = 1800)     {         return $this->redis->set($this->group.'_'.$this->ver.'_'.$key, $value, 0, $expire);     }     /**      * 自增      * @param $key      * @param int $value      * @return mixed      */     public function inc($key, $value = 1)     {         return $this->redis->incr($this->group.'_'.$this->ver.'_'.$key, $value);     }     /**      * 递增缓存值      * @param  string  $key   缓存名      * @param  integer $value 递增数量      * @return boolean      */     public function des($key, $value = 1)     {         return $this->redis->decr($this->group.'_'.$this->ver.'_'.$key, $value);     }     /**      * 删除缓存      * @param  string $key 缓存名      * @return boolean      */     public function del($key)     {         return $this->redis->delete($key);     }     /**      * 清空缓存      * @return void      */     public function clear()     {         return  $this->redis->set($this->group.'_ver', $this->ver+1);     } }